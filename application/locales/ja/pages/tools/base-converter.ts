import { BaseConverterTranslations } from "../../../types/pages/tools/base-converter";

export const baseConverter: BaseConverterTranslations = {
  title: "進数変換ツール",
  subtitle: "2進数・8進数・10進数・16進数の相互変換",
  description:
    "無料の進数変換ツールです。2進数・8進数・10進数・16進数の相互変換、ビット演算、ASCII文字コード表示に対応。プログラミング・システム開発に最適な高精度変換ツール。",
  keywords: [
    "進数変換",
    "進数変換ツール",
    "2進数変換",
    "16進数変換",
    "8進数変換",
    "10進数変換",
    "ビット演算",
    "進数計算機",
    "基数変換",
    "バイナリ変換",
    "ヘキサ変換",
    "オクタル変換",
    "ASCII変換",
    "プログラミングツール",
    "数値変換",
    "進数変換表",
    "進数変換サイト",
    "無料進数変換",
    "オンライン進数変換",
    "2進法計算",
  ],
  conversionTitle: "進数変換",
  inputLabel: "数値入力",
  inputPlaceholder: "変換したい数値を入力",
  inputBaseLabel: "入力する数値の進数",
  inputBaseDescription: "変換元となる数値の進数を選択",
  binaryBase: "2進数 (0,1)",
  octalBase: "8進数 (0-7)",
  decimalBase: "10進数 (0-9)",
  hexBase: "16進数 (0-9,A-F)",
  convertButton: "変換実行",
  decimalLabel: "10進数 (Decimal)",
  binaryLabel: "2進数 (Binary)",
  octalLabel: "8進数 (Octal)",
  hexadecimalLabel: "16進数 (Hexadecimal)",
  clearButton: "クリア",
  copyButton: "コピー",
  pasteButton: "貼り付け",
  copyTooltip: "クリックでコピー",
  bitOperationsTitle: "ビット演算",
  bitOperationsDescription: "2つの数値でビット単位の論理演算を実行",
  operandBaseLabel: "演算する数値の進数",
  operandBaseDescription: "演算に使用する数値の進数を選択",
  operationLabel: "演算の種類",
  operationDescription: "実行するビット演算を選択",
  andOperation: "AND (&) - 論理積",
  orOperation: "OR (|) - 論理和",
  xorOperation: "XOR (^) - 排他的論理和",
  notOperation: "NOT (~) - 論理否定",
  leftShift: "左シフト (<<)",
  rightShift: "右シフト (>>)",
  performOperation: "演算実行",
  operand1Label: "第1オペランド",
  operand2Label: "第2オペランド",
  operand2Description: "NOT演算以外で必要",
  operationResult: "演算結果",
  asciiTableTitle: "ASCII文字コード表",
  asciiTableDescription: "ASCII文字と対応する数値コードの一覧表",
  asciiCharacter: "文字",
  asciiDecimal: "10進",
  asciiBinary: "2進",
  asciiHex: "16進",
  showTable: "表を表示",
  hideTable: "表を非表示",
  invalidInput: "無効な入力",
  copied: "コピー完了",
  copyFailed: "コピーに失敗",
  enterValueFirst: "数値を入力してください",
  negativeValueNote: "負の値",
  asciiTableNote:
    "ASCII印字可能文字（32-126）の一部を表示しています。全95文字に対応。",
  howToUse: {
    title: "使い方",
    steps: [
      "変換したい数値を入力欄に入力",
      "入力数値の進数（2進数・8進数・10進数・16進数）を選択",
      "「変換実行」ボタンをクリック",
      "4つの進数での変換結果が同時表示",
      "各結果をクリックしてクリップボードにコピー",
      "ビット演算は専用セクションで数値と演算子を選択",
      "ASCII文字コード表は表示ボタンで確認可能",
    ],
  },
  features: {
    title: "主な機能",
    items: [
      "2進数・8進数・10進数・16進数の高精度相互変換",
      "ビット演算（AND・OR・XOR・NOT・シフト演算）",
      "ASCII文字コード表の一覧表示",
      "入力値の自動検証とリアルタイムエラー表示",
      "ワンクリックコピー機能（プレフィックス付き）",
      "大きな数値対応（JavaScript安全整数範囲内）",
      "複数進数での同時表示",
    ],
  },
  faqList: [
    {
      q: "進数変換ツールの用途は？",
      a: "プログラミング、システム開発、デジタル回路設計で異なる進数での数値表現が必要な場合に活用できます。2進数はコンピューター内部処理、16進数はメモリアドレスやカラーコード表現によく使用されます。",
    },
    {
      q: "対応している進数の種類は？",
      a: "2進数（0,1）、8進数（0-7）、10進数（0-9）、16進数（0-9,A-F）の4つの進数に完全対応。入力した数値は自動的に他の3つの進数へ変換されます。",
    },
    {
      q: "利用可能なビット演算は？",
      a: "AND（&）・OR（|）・XOR（^）・NOT（~）の論理演算と、左シフト（<<）・右シフト（>>）演算が可能。プログラミングでの効率的な処理やフラグ管理に活用できます。",
    },
    {
      q: "入力数値の制限について",
      a: "JavaScript安全整数範囲（Number.MAX_SAFE_INTEGER）内の正の整数に対応。約9,007兆までの数値を扱えます。負の数値には対応していません。",
    },
    {
      q: "ASCII文字コード表の活用方法は？",
      a: "印字可能なASCII文字（スペース～チルダ）とその10進数・2進数・16進数コードを確認できます。プログラミングで文字コード処理を行う際の参考資料として活用可能です。",
    },
    {
      q: "コピー機能の使用方法は？",
      a: "各進数の変換結果横にあるコピーボタンをクリックすると、プレフィックス付きの値がクリップボードにコピーされます。例：2進数「0b1010」、16進数「0xA」の形式。",
    },
  ],
};
