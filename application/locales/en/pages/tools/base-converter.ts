import { BaseConverterTranslations } from "../../../types/pages/tools/base-converter";

export const baseConverter: BaseConverterTranslations = {
  title: "Number Base Converter",
  subtitle: "Binary, Octal, Decimal, Hex Converter",
  description:
    "Free online number base converter tool. Convert between binary, octal, decimal, and hexadecimal with bit operations and ASCII character codes. Perfect for programming and system development.",
  keywords: [
    "base converter",
    "number base converter",
    "binary converter",
    "hexadecimal converter",
    "octal converter",
    "decimal converter",
    "bit operations",
    "radix converter",
    "binary to decimal",
    "hex to decimal",
    "octal to binary",
    "ASCII converter",
    "programming tools",
    "number conversion",
    "base conversion calculator",
    "online base converter",
    "free base converter",
    "binary calculator",
    "hex calculator",
    "bitwise operations",
  ],
  conversionTitle: "Number Base Conversion",
  inputLabel: "Enter Number",
  inputPlaceholder: "Enter number to convert",
  inputBaseLabel: "Input Number Base",
  inputBaseDescription: "Select the base of the input number",
  binaryBase: "Binary (0,1)",
  octalBase: "Octal (0-7)",
  decimalBase: "Decimal (0-9)",
  hexBase: "Hexadecimal (0-9,A-F)",
  convertButton: "Convert",
  decimalLabel: "Decimal (Base 10)",
  binaryLabel: "Binary (Base 2)",
  octalLabel: "Octal (Base 8)",
  hexadecimalLabel: "Hexadecimal (Base 16)",
  clearButton: "Clear",
  copyButton: "Copy",
  pasteButton: "Paste",
  copyTooltip: "Click to copy",
  bitOperationsTitle: "Bit Operations",
  bitOperationsDescription:
    "Perform bitwise logical operations between two numbers",
  operandBaseLabel: "Operand Number Base",
  operandBaseDescription: "Select the base of the operand numbers",
  operationLabel: "Operation Type",
  operationDescription: "Select the bit operation to perform",
  andOperation: "AND (&) - Logical AND",
  orOperation: "OR (|) - Logical OR",
  xorOperation: "XOR (^) - Exclusive OR",
  notOperation: "NOT (~) - Logical NOT",
  leftShift: "Left Shift (<<)",
  rightShift: "Right Shift (>>)",
  performOperation: "Perform Operation",
  operand1Label: "First Operand",
  operand2Label: "Second Operand",
  operand2Description: "Required for all operations except NOT",
  operationResult: "Operation Result",
  asciiTableTitle: "ASCII Character Table",
  asciiTableDescription: "ASCII characters with corresponding numeric codes",
  asciiCharacter: "Character",
  asciiDecimal: "Decimal",
  asciiBinary: "Binary",
  asciiHex: "Hex",
  showTable: "Show Table",
  hideTable: "Hide Table",
  invalidInput: "Invalid input",
  copied: "Copied",
  copyFailed: "Copy failed",
  enterValueFirst: "Enter a value first",
  negativeValueNote: "Negative value",
  asciiTableNote:
    "Showing ASCII printable characters (32-126). Total 95 characters supported.",
  howToUse: {
    title: "How to Use",
    steps: [
      "Enter the number you want to convert",
      "Select the input number base (binary, octal, decimal, or hexadecimal)",
      "Click the 'Convert' button",
      "View results displayed simultaneously in all four number bases",
      "Click any result to copy it to the clipboard",
      "Use the bit operations section for bitwise calculations",
      "View ASCII character codes using the show table button",
    ],
  },
  features: {
    title: "Key Features",
    items: [
      "High-precision conversion between binary, octal, decimal, and hexadecimal",
      "Bit operations (AND, OR, XOR, NOT, shift operations)",
      "ASCII character code table display",
      "Automatic input validation with real-time error display",
      "One-click copy functionality with prefixes",
      "Support for large numbers (within JavaScript's safe integer range)",
      "Simultaneous display in multiple number bases",
    ],
  },
  faqList: [
    {
      q: "What can I use the number base converter for?",
      a: "This converter is essential for programming, system development, and digital circuit design where different number base representations are needed. Binary is used for computer internal processing, while hexadecimal is common for memory addresses and color codes.",
    },
    {
      q: "Which number bases are supported?",
      a: "The tool supports four number bases: binary (0,1), octal (0-7), decimal (0-9), and hexadecimal (0-9,A-F). Any input number is automatically converted to the other three bases.",
    },
    {
      q: "What bit operations are available?",
      a: "Available operations include AND (&), OR (|), XOR (^), NOT (~) logical operations and left shift (<<), right shift (>>) operations. These are commonly used in programming for efficient processing and flag management.",
    },
    {
      q: "Are there limits on input numbers?",
      a: "The tool supports positive integers within JavaScript's safe integer range (Number.MAX_SAFE_INTEGER), approximately 9,007 trillion. Negative numbers are not supported.",
    },
    {
      q: "How do I use the ASCII character table?",
      a: "The ASCII table displays standard printable characters (space to ~) with their corresponding decimal, binary, and hexadecimal codes. It serves as a reference when working with character codes in programming.",
    },
    {
      q: "How does the copy function work?",
      a: "Click the copy button next to any conversion result to copy the value with prefix to the clipboard. For example: binary numbers are copied as '0b1010', hexadecimal as '0xA'.",
    },
  ],
};
