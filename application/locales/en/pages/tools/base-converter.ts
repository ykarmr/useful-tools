import { BaseConverterTranslations } from "../../../types/pages/tools/base-converter";

export const baseConverter: BaseConverterTranslations = {
  title: "Number Base Converter",
  description:
    "Convert between binary, octal, decimal, and hexadecimal number systems. Perform bit operations and view ASCII character codes.",
  keywords: [
    "base converter",
    "binary",
    "octal",
    "hexadecimal",
    "bit operations",
    "ASCII",
    "programming",
    "number conversion",
    "radix conversion",
    "decimal",
  ],
  conversionTitle: "Number Base Conversion",
  inputLabel: "Enter Number",
  inputPlaceholder: "Enter a number",
  inputBaseLabel: "Input Base",
  inputBaseDescription: "Select the base of the input number",
  binaryBase: "Binary (0,1)",
  octalBase: "Octal (0-7)",
  decimalBase: "Decimal (0-9)",
  hexBase: "Hexadecimal (0-9,A-F)",
  convertButton: "Convert",
  decimalLabel: "Decimal (Base 10)",
  binaryLabel: "Binary (Base 2)",
  octalLabel: "Octal (Base 8)",
  hexadecimalLabel: "Hexadecimal (Base 16)",
  clearButton: "Clear",
  copyButton: "Copy",
  pasteButton: "Paste",
  copyTooltip: "Click to copy",
  bitOperationsTitle: "Bit Operations",
  bitOperationsDescription:
    "Perform bitwise logical operations between two numbers",
  operandBaseLabel: "Operand Base",
  operandBaseDescription: "Select the base of the input numbers",
  operationLabel: "Operation",
  operationDescription: "Select the bit operation to perform",
  andOperation: "AND (&) - Logical AND",
  orOperation: "OR (|) - Logical OR",
  xorOperation: "XOR (^) - Exclusive OR",
  notOperation: "NOT (~) - Logical NOT",
  leftShift: "Left Shift (<<)",
  rightShift: "Right Shift (>>)",
  performOperation: "Perform Operation",
  operand1Label: "First Operand",
  operand2Label: "Second Operand",
  operand2Description: "Required for all operations except NOT",
  operationResult: "Operation Result",
  asciiTableTitle: "ASCII Character Table",
  asciiTableDescription: "Standard ASCII characters and their numeric codes",
  asciiCharacter: "Character",
  asciiDecimal: "Decimal",
  asciiBinary: "Binary",
  asciiHex: "Hex",
  showTable: "Show Table",
  hideTable: "Hide Table",
  invalidInput: "Invalid input",
  copied: "Copied!",
  copyFailed: "Copy failed",
  enterValueFirst: "Please enter a value first",
  negativeValueNote: "Negative value",
  asciiTableNote:
    "Only a subset is displayed. ASCII printable characters range from 32 (space) to 126 (~), totaling 95 characters.",
  howToUse: {
    title: "How to Use",
    steps: [
      "Enter a number in the input field",
      "Select the input base (binary, octal, decimal, or hexadecimal)",
      "Click the 'Convert' button to perform the conversion",
      "Results are displayed simultaneously in all four number bases",
      "Click any result to copy it to the clipboard",
      "For bit operations, use the bit operations section to select numbers and operators",
      "To view ASCII character codes, click the show table button",
    ],
  },
  features: {
    title: "Key Features",
    items: [
      "Convert between binary, octal, decimal, and hexadecimal",
      "Bit operations (AND, OR, XOR, NOT, shift operations)",
      "ASCII character code table display",
      "Automatic input validation and error display",
      "One-click copy functionality",
      "Support for large numbers (within JavaScript's safe integer range)",
      "Simultaneous display in multiple number bases",
    ],
  },
  faqList: [
    {
      q: "What can I use the number base converter for?",
      a: "The converter is useful for programming, system development, and digital circuit design where different number base representations are needed. Binary is commonly used for computer internal processing, while hexadecimal is often used for memory addresses and color codes.",
    },
    {
      q: "Which number bases can I convert from?",
      a: "This tool supports four number bases: binary (0,1), octal (0-7), decimal (0-9), and hexadecimal (0-9,A-F). Any input number is automatically converted to the other three bases.",
    },
    {
      q: "What bit operations are available?",
      a: "You can perform AND (&), OR (|), XOR (^), NOT (~) logical operations and left shift (<<), right shift (>>) operations. These are commonly used in programming for efficient processing and flag management.",
    },
    {
      q: "Are there limits on input numbers?",
      a: "The tool supports positive integers within JavaScript's safe integer range (Number.MAX_SAFE_INTEGER), which is approximately 9,007 trillion. Negative numbers are not supported.",
    },
    {
      q: "How do I use the ASCII character table?",
      a: "The ASCII table shows standard printable characters (space to ~) and their corresponding decimal, binary, and hexadecimal codes. It's useful as a reference when working with character codes in programming.",
    },
    {
      q: "How does the copy function work?",
      a: "Click the copy button next to any conversion result to copy the value (with prefix) to the clipboard. For example: binary numbers are copied as '0b1010', hexadecimal as '0xA'.",
    },
  ],
};
