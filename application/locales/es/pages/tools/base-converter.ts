import { BaseConverterTranslations } from "../../../types/pages/tools/base-converter";

export const baseConverter: BaseConverterTranslations = {
  title: "Conversor de Bases Numéricas",
  description:
    "Convierte entre sistemas binario, octal, decimal y hexadecimal. Realiza operaciones de bits y visualiza códigos de caracteres ASCII.",
  keywords: [
    "conversor de bases",
    "binario",
    "octal",
    "hexadecimal",
    "operaciones de bits",
    "ASCII",
    "programación",
    "conversión numérica",
    "conversión de base",
    "decimal",
  ],
  conversionTitle: "Conversión de Bases Numéricas",
  inputLabel: "Introducir Número",
  inputPlaceholder: "Introduce un número",
  inputBaseLabel: "Base de Entrada",
  inputBaseDescription: "Selecciona la base del número de entrada",
  binaryBase: "Binario (0,1)",
  octalBase: "Octal (0-7)",
  decimalBase: "Decimal (0-9)",
  hexBase: "Hexadecimal (0-9,A-F)",
  convertButton: "Convertir",
  decimalLabel: "Decimal (Base 10)",
  binaryLabel: "Binario (Base 2)",
  octalLabel: "Octal (Base 8)",
  hexadecimalLabel: "Hexadecimal (Base 16)",
  clearButton: "Limpiar",
  copyButton: "Copiar",
  pasteButton: "Pegar",
  copyTooltip: "Haz clic para copiar",
  bitOperationsTitle: "Operaciones de Bits",
  bitOperationsDescription:
    "Realiza operaciones lógicas bit a bit entre dos números",
  operandBaseLabel: "Base de Operandos",
  operandBaseDescription: "Selecciona la base de los números de entrada",
  operationLabel: "Operación",
  operationDescription: "Selecciona la operación de bits a realizar",
  andOperation: "AND (&) - Y Lógico",
  orOperation: "OR (|) - O Lógico",
  xorOperation: "XOR (^) - O Exclusivo",
  notOperation: "NOT (~) - Negación Lógica",
  leftShift: "Desplazamiento Izq. (<<)",
  rightShift: "Desplazamiento Der. (>>)",
  performOperation: "Realizar Operación",
  operand1Label: "Primer Operando",
  operand2Label: "Segundo Operando",
  operand2Description: "Requerido para todas las operaciones excepto NOT",
  operationResult: "Resultado de Operación",
  asciiTableTitle: "Tabla de Caracteres ASCII",
  asciiTableDescription: "Caracteres ASCII estándar y sus códigos numéricos",
  asciiCharacter: "Carácter",
  asciiDecimal: "Decimal",
  asciiBinary: "Binario",
  asciiHex: "Hex",
  showTable: "Mostrar Tabla",
  hideTable: "Ocultar Tabla",
  invalidInput: "Entrada inválida",
  copied: "¡Copiado!",
  copyFailed: "Error al copiar",
  enterValueFirst: "Por favor introduce un valor primero",
  negativeValueNote: "Valor negativo",
  asciiTableNote:
    "Solo se muestra un subconjunto. Los caracteres ASCII imprimibles van del 32 (espacio) al 126 (~), totalizando 95 caracteres.",
  howToUse: {
    title: "Cómo Usar",
    steps: [
      "Introduce un número en el campo de entrada",
      "Selecciona la base de entrada (binario, octal, decimal o hexadecimal)",
      "Haz clic en el botón 'Convertir' para realizar la conversión",
      "Los resultados se muestran simultáneamente en las cuatro bases numéricas",
      "Haz clic en cualquier resultado para copiarlo al portapapeles",
      "Para operaciones de bits, usa la sección de operaciones de bits para seleccionar números y operadores",
      "Para ver códigos de caracteres ASCII, haz clic en el botón mostrar tabla",
    ],
  },
  features: {
    title: "Características Principales",
    items: [
      "Conversión entre binario, octal, decimal y hexadecimal",
      "Operaciones de bits (AND, OR, XOR, NOT, operaciones de desplazamiento)",
      "Visualización de tabla de códigos de caracteres ASCII",
      "Validación automática de entrada y visualización de errores",
      "Función de copia con un clic",
      "Soporte para números grandes (dentro del rango de enteros seguros de JavaScript)",
      "Visualización simultánea en múltiples bases numéricas",
    ],
  },
  faqList: [
    {
      q: "¿Para qué puedo usar el convertidor de bases numéricas?",
      a: "El convertidor es útil para programación, desarrollo de sistemas y diseño de circuitos digitales donde se necesitan diferentes representaciones de bases numéricas. El binario se usa comúnmente para procesamiento interno de computadoras, mientras que el hexadecimal se usa a menudo para direcciones de memoria y códigos de color.",
    },
    {
      q: "¿Desde qué bases numéricas puedo convertir?",
      a: "Esta herramienta soporta cuatro bases numéricas: binario (0,1), octal (0-7), decimal (0-9) y hexadecimal (0-9,A-F). Cualquier número de entrada se convierte automáticamente a las otras tres bases.",
    },
    {
      q: "¿Qué operaciones de bits están disponibles?",
      a: "Puedes realizar operaciones lógicas AND (&), OR (|), XOR (^), NOT (~) y operaciones de desplazamiento izquierdo (<<), desplazamiento derecho (>>). Estas se usan comúnmente en programación para procesamiento eficiente y gestión de banderas.",
    },
    {
      q: "¿Hay límites en los números de entrada?",
      a: "La herramienta soporta enteros positivos dentro del rango de enteros seguros de JavaScript (Number.MAX_SAFE_INTEGER), que es aproximadamente 9,007 billones. Los números negativos no están soportados.",
    },
    {
      q: "¿Cómo uso la tabla de caracteres ASCII?",
      a: "La tabla ASCII muestra caracteres imprimibles estándar (espacio a ~) y sus códigos decimales, binarios y hexadecimales correspondientes. Es útil como referencia al trabajar con códigos de caracteres en programación.",
    },
    {
      q: "¿Cómo funciona la función de copia?",
      a: "Haz clic en el botón de copia junto a cualquier resultado de conversión para copiar el valor (con prefijo) al portapapeles. Por ejemplo: los números binarios se copian como '0b1010', hexadecimal como '0xA'.",
    },
  ],
};
